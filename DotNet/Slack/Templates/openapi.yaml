openapi: 3.1.0
info:
  title: Slack Skill
  description: A VertexGraph Skill to access and perform tasks on the user's Slack account.
  version: 1.0.0
servers:
  - url: $skillhost 
### ===========================================================================
### ENDPOINTS==================================================================
### ===========================================================================   
paths:                
### /messages/send/send_to_channel---------------------------------------------------- 
  $skillapproot/messages/send_to_channel:
    post:
      title: Send a new message to a channel
      operationId: SendMessageToChannel
      summary: Send a new message to a channel
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to send a message to a channel
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
### /messages/send/send_to_user---------------------------------------------------- 
  $skillapproot/messages/send_to_user:
    post:
      title: Send a new message to a user
      operationId: SendMessageToUser
      summary: Send a new message to a user
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body for sending message to user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageToUserRequest'
### /messages/list---------------------------------------------------- 
  $skillapproot/messages/list/channel:
    post:
      title: Get messages from one specific channel
      operationId: GetChannelMessages
      summary: Get messages from one specific channel
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMsgsResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMsgsResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelMsgsResponse'
      requestBody:
        description: Request body for getting messages from channel
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListChannelMsgsRequest'
              
### /messages/list/all---------------------------------------------------- 
  $skillapproot/messages/list/all:
    post:
      title: Get messages from every conversation/channel
      operationId: GetAllMessages
      summary: Get messages from every conversation/channel
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'
      requestBody:
        description: Request body for getting messages from all conversations
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAllMsgsRequest'
### /messages/list/all_dms---------------------------------------------------- 
  $skillapproot/messages/list/all_dms:
    post:
      title: Get messages from every direct message channel
      operationId: GetAllDirectMessages
      summary: Get messages from every direct message channel
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'
      requestBody:
        description: Request body for getting messages from all dm's
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAllMsgsRequest'
### /messages/list/all_group---------------------------------------------------- 
  $skillapproot/messages/list/all_group:
    post:
      title: Get messages from every group chat channel
      operationId: GetAllGroupMessages
      summary: Get messages from every group chat channel
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'
      requestBody:
        description: Request body for getting messages from all group chats
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAllMsgsRequest'
### /messages/list/all_channel---------------------------------------------------- 
  $skillapproot/messages/list/all_channel:
    post:
      title: Get messages from every public and private channel
      operationId: GetAllChannelMessages
      summary: Get messages from every public and private channel
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAllMsgsResponse'
      requestBody:
        description: Request body for getting messages from all channels
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAllMsgsRequest'
### /reminders/add---------------------------------------------------- 
  $skillapproot/reminders/add:
    post:
      title: Add a reminder
      operationId: AddReminder
      summary: Create a new reminder
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to create a new reminder
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReminderRequest'
### /dnd/setSnooze---------------------------------------------------- 
  $skillapproot/messages/dnd:
    post:
      title: Set Do Not Disturb mode
      operationId: SetDnd
      summary: Turn on Do Not Disturb mode or change its duration
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to set Do Not Disturb mode
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDndRequest'
              
### /user/status---------------------------------------------------- 
  $skillapproot/messages/status:
    post:
      title: Set User Custom Status
      operationId: SetUserCustomStatus
      summary: Set a user's custom status
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to set a user's custom status
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUserStatusRequest'

### /messages/search---------------------------------------------------- 
  $skillapproot/messages/search:
    post:
      title: Search for messages
      operationId: SearchMessages
      summary: Searches for messages matching a query
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMessagesResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMessagesResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMessagesResponse'
      requestBody:
        description: Request body for searching messages
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
              
### /search/messages---------------------------------------------------- 
  $skillapproot/messages/search_files:
    post:
      title: Search for files
      operationId: SearchFiles
      summary: Searches for files matching a query
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFilesResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFilesResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFilesResponse'
      requestBody:
        description: Request body for searching files
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'

### ===========================================================================
### COMPONENTS=================================================================
### ===========================================================================    
components:
  schemas:   
### ====================================================   
### REQUEST COMPONENTS==================================  
### SendMessageRequest==================================
    SendMessageRequest:
      title: Parameters for Send Message operations.
      type: object
      properties:
        channel:
          type: string
          description: Name of the channel.
        text:
          type: string
          description: Message text.
    SendMessageToUserRequest:
      title: Parameters for Send Message to user operation.
      type: object
      properties:
        user_fullname:
          type: string
          description: Full name of the user.
        text:
          type: string
          description: Message text.
### ListChannelRequest====================================
    ListChannelMsgsRequest:
      title: Parameters for List Channel Messages operations.
      type: object
      properties:
        channel:
          type: string
          description: Name of the channel/conversation.
          required: true
        is_direct_message:
          type: boolean
          description: True if the user is requesting to get direct messages for a user
          required: true
        limit:
          type: integer
          description: Limit on how many messages to retrieve per channel (default is 5).
        oldest:
          type: string
          format: date-time
          title: Time Max
          description: |
            Upper bound for messages sent time to filter by.
        latest:
          type: string
          format: date-time
          title: Time Min
          description: |
            Lower bound for messages sent time to filter by.
        
### ListAllMsgsRequest==================================
    ListAllMsgsRequest:
      title: Parameters for Listing all messages operation.
      type: object
      properties:
        limit:
          type: integer
          description: Limit on how many messages to retrieve per channel.
          default: 5
        oldest:
          type: string
          format: date-time
          title: Time Max
          description: |
            Upper bound for messages sent time to filter by.
        latest:
          type: string
          format: date-time
          title: Time Min
          description: |
            Lower bound for messages sent time to filter by.
            
### ReminderRequest============================
    ReminderRequest:
      title: Parameters for Reminder operations.
      type: object
      properties:
        text:
          type: string
          title: Reminder text
          description: The content of the reminder 
        time_statement:
          type: string
          title: Reminder time statement
          description: Statement of what time the reminder should take place. Ex. Tomorrow at 5pm, 10am on Wednesday
### UpdateReminderRequest============================
    UpdateReminderRequest:
      title: Parameters for Updating Reminder operation.
      type: object
      properties:
        currentText:
          type: string
          title: Current Reminder text
          description: The current content of the reminder 
        currentTime:
          type: string
          title: Current Reminder time
          description: The current time the reminder should happen
        updatedText:
          type: string
          title: Updated Reminder text
          description: The updated content of the reminder 
        updateTime:
          type: string
          title: Updated Reminder time
          description: The updated time the reminder should happen
            
### ListRemindersRequest============================
    ListRemindersRequest:
      title: Parameters for List Reminder operations.
      type: object
      properties:
        timeMax:
          type: string
          format: date-time
          title: Time Max
          description: |
            Upper bound for reminder time to filter by.
        timeMin:
          type: string
          format: date-time
          title: Time Min
          description: |
            Lower bound for reminder time to filter by.
### SetDndRequest============================
    SetDndRequest:
      title: Parameters for Set DND operations.
      type: object
      properties:
        num_minutes:
          type: number
          title: DND duration
          description: The duration of DND status in minutes
          
### SetUserStatusRequest============================
    SetUserStatusRequest:
      title: Parameters for User Status Request operations.
      type: object
      properties:
        statusEmoji:
          type: string
          description: The displayed emoji for the status
        statusExpiration:
          type: string
          format: date-time
          description: The date and time of when the status will expire
        statusText:
          type: string
          maxLength: 100
          description: The displayed text of the status
         
### SearchFilesRequest==================================
    SearchRequest:
      title: Parameters for Search operations.
      type: object
      properties:
        query:
          type: string    
          description: A simple string to search for in the content of the messages.
        memberEmail:
          type: string    
          description: The email of the member who sent the message.  
### ++++++++++++++++++++++++++++++++++++++++++++++++++++   
### RESPONSE COMPONENTS+++++++++++++++++++++++++++++++++   
### ServerResponse++++++++++++++++++++++++++++++++++++++      
    ServerResponse:  
      title: Server Response
      type: object
      properties: 
        message:   
          title: Message from Server. Used by various operations.
          type: string    
          description: A success or error message. 
    ListChannelMsgsResponse:
      type: object
      properties:
        channel:
          type: string
          description: The channel identifier.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: The list of messages in the channel.    
    Message:
      type: object
      properties:
        channel:
          type: string
          description: The channel identifier.
        text:
          type: string
          description: The text of the message.
        user:
          type: string
          description: The user who sent the message.
        type:
          type: string
          description: The type of message.
        ts:
          type: string
          description: The timestamp of the message.  
    SearchMessagesResponse:
      type: object
      messages:
        type: object
        properties:
          matches:
            type: array
            items:
              type: object
              properties:
                channel:
                  type: object
                  properties:
                    name:
                      type: string
                type:
                  type: string
                username:
                  type: string
                ts:
                  type: string
                text:
                  type: string
                permalink:
                  type: string
    SearchFilesResponse:
      type: object
      files:
        type: object
        properties:
          matches:
            type: array
            items:
              type: object
              properties:
                timestamp:
                  type: integer      
                name:
                  type: string
                user:
                  type: string
                size:
                  type: integer
                url_private_download:
                  type: string
                permalink:
                  type: string 
             

### ++++++++++++++++++++++++++++++++++++++++++++++++++++ 
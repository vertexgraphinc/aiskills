openapi: 3.1.0
info:
  title: Google Calendar Skill
  description: A VertexGraph Skill to access and perform tasks on the user's Google Calendar account.
  version: 1.0.0
servers:
  - url: $skillhost 
### ===========================================================================
### ENDPOINTS==================================================================
### ===========================================================================   
paths:                
### /events/create---------------------------------------------------- 
  $skillapproot/events/create:
    post:
      title: Create a new event
      operationId: CreateEvent
      summary: Create a new event in the primary calendar
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to create a new event
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
### /events/get------------------------------------------------------ 
  $skillapproot/events/get:          
    post:
      title: Get events
      operationId: GetEvents
      summary: Get events from the primary calendar
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
      requestBody:
        description: Request body to get events
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEventsRequest'
### /events/remove---------------------------------------------------- 
  $skillapproot/events/remove:
    post:
      title: Remove events
      operationId: RemoveEvents
      summary: Remove events from the primary calendar
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to remove an event
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveEventsRequest'
### /events/get_recurring--------------------------------------------- 
  $skillapproot/events/get_recurring:
    post:
      title: Get recurring event
      operationId: GetRecurringEvent
      summary: Get instances of recurring events from the primary calendar
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringEventResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringEventResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecurringEventResponse'
      requestBody:
        description: Request body to get recurring event
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRecurringEventRequest'
### /events/update---------------------------------------------------- 
  $skillapproot/events/update:
    post:
      title: Update event
      operationId: UpdateEvent
      summary: Update an event from primary calendar
      responses:
        "200":
          description: OK  
          content:        
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'    
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerResponse'
      requestBody:
        description: Request body to remove an event
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventRequest'
### ===========================================================================
### COMPONENTS=================================================================
### ===========================================================================    
components:
  schemas:   
### ====================================================   
### REQUEST COMPONENTS==================================  
### CreateEventRequest==================================
    CreateEventRequest:
      title: Parameters for Create Event operations.
      type: object
      properties:
        summary:
          type: string
          description: Summary of the event.
        description:
          type: string
          description: Description of the event.
        startDateTime:
          type: string
          description: Start date and time of the event.
        endDateTime:
          type: string
          description: End date and time of the event.
        localTimeZone:
          type: string
          description: The local time zone of the event.
          example: "America/Toronto"
        attendees:
          type: string
          description: Attendees email addresses concatenated together with commas in between
          example: "test@test.com,test1@test1.com,test2@test2.com"
### GetEventsRequest====================================
    GetEventsRequest:
      title: Parameters for Get Events operations.
      type: object
      properties:
        q:
          type: string
          title: Free Text Search
          description: |
            Free text search terms to find events that match these terms. Optional.
        timeMax:
          type: string
          format: date-time
          title: Time Max
          description: |
            Upper bound (exclusive) for an event's start date and time to filter by.
        timeMin:
          type: string
          format: date-time
          title: Time Min
          description: |
            Lower bound (inclusive) for an event's end date and time to filter by.
      required:
        - timeMin
        - timeMax
### RemoveEventsRequest==================================
    RemoveEventsRequest:
      title: Parameters for Remove Event operations.
      type: object
      properties:
        timeMax:
          type: string
          format: date-time
          title: Time Max
          description: |
            Upper bound (exclusive) for an event's start time to filter by.
            The default is the current time.
        timeMin:
          type: string
          format: date-time
          title: Time Min
          description: |
            Lower bound (inclusive) for an event's end time to filter by.
            The default is the current time.
        email:
          type: string
          title: Email
          description: The attendee's email address, if available.
        displayName:
          type: string
          title: Display Name
          description: The attendee's name, if available.
      required:
        - timeMin
        - timeMax
### GetRecurringEventRequest============================
    GetRecurringEventRequest:
      title: Parameters for Get Recurring Event operations.
      type: object
      properties:
        originalStart:
          type: string
          format: date-time
          title: Original Start
          description: |
            The original start time of the instance in the result. Optional.
        timeMax:
          type: string
          format: date-time
          title: Time Max
          description: |
            Upper bound (exclusive) for an event's start time to filter by.
            The default is the current time.
        timeMin:
          type: string
          format: date-time
          title: Time Min
          description: |
            Lower bound (inclusive) for an event's end time to filter by.
            The default is the current time.
      required:
        - timeMin
        - timeMax
### UpdateEventRequest==================================
    UpdateEventRequest:
      title: Parameters for Update Event operation.
      type: object
      properties:
        id:
          type: string
          description: The ID of the event
        timeZone:
          type: string
          description: The time zone of the event.
          example: "America/Toronto"
        updatedSummary:
          type: string
          description: The updated summary of the event.
        updatedStartDateTime:
          type: string
          description: The updated start date and time of the event in UTC time.
          format: date-time
          example: "2024-02-16T19:00:00Z"
        updatedEndDateTime:
          type: string
          description: The updated end date and time of the event in UTC time.
          format: date-time
          example: "2024-02-16T19:00:00Z"
        attendeesToRemove:
          type: string
          description: Comma-separated list of attendee emails to be removed from the event
          example: "test@test.com,test1@test1.com,test2@test2.com"
        attendeesToAdd:
          type: string
          description: Comma-separated list of attendee emails to be added to the event
          example: "test@test.com,test1@test1.com,test2@test2.com"
### ++++++++++++++++++++++++++++++++++++++++++++++++++++   
### RESPONSE COMPONENTS+++++++++++++++++++++++++++++++++   
### ServerResponse++++++++++++++++++++++++++++++++++++++      
    ServerResponse:  
      title: Server Response
      type: object
      properties: 
        message:   
          title: Message from Server. Used by various operations.
          type: string    
          description: A success or error message.  
### GetEventsResponse+++++++++++++++++++++++++++++++++++  
    GetEventsResponse:
      title: Get Events Response
      type: object
      properties:   
        message:   
          title: Message from Server
          type: string    
          description: A success or error message.   
        events:
          type: array
          items:
            $ref: "#/components/schemas/SimpleEvent"
          description: A list of events  
### GetRecurringEventResponse+++++++++++++++++++++++++++  
    GetRecurringEventResponse:
      title: Get Recurring Event Response
      type: object
      properties:   
        message:   
          title: Message from Server
          type: string    
          description: A success or error message.   
        events:
          type: array
          items:
            $ref: "#/components/schemas/SimpleEvent"
          description: A list of event instances    

### SimpleEvent========================================= 
    SimpleEvent:
      type: object
      properties:
        id:
          type: string
          title: ID
          description: Unique identifier for the event.
        status:
          type: string
          title: Status
          description: Status of the event. Possible values are "confirmed", "tentative", or "cancelled".
        summary:
          type: string
          title: Summary
          description: Title or summary of the event.
        description:
          type: string
          title: Description
          description: Description of the event.
        location:
          type: string
          title: Location
          description: Location of the event.
        startDateTime:
          type: string
          format: date-time
          title: Start Date Time
          description: Date and time when the event starts.
        startTimeZone:
          type: string
          title: Start Time Zone
          description: The time zone in which the event starts.
        endDateTime:
          type: string
          format: date-time
          title: End Date Time
          description: Date and time when the event ends.
        endTimeZone:
          type: string
          title: End Time Zone
          description: The time zone in which the event ends.
        recurrence:
          type: string
          title: Recurrence
          description: List of RRULE, RDATE, and EXDATE lines for a recurring event concatenated together with commas in between. Only available for recurring events.
        recurringEventId:
          type: string
          title: Recurring Event ID
          description: ID of the recurring event. Only available for recurring events.
        originalStartTime:
          type: string
          format: date-time
          title: Original Date Time
          description: The original start date and time of the instance. Only available for recurring events.
        originalStartTimeZone:
          type: string
          title: Original Time Zone
          description: The time zone of the original start time of the instance.
        attendeesEmails:
          type: string
          title: Attendees' Emails
          description: Attendees email addresses concatenated together with commas in between
          example: "test@test.com,test1@test1.com,test2@test2.com"
### ++++++++++++++++++++++++++++++++++++++++++++++++++++